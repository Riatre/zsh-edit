#!/bin/zsh
emulate -L zsh; setopt $_edit_opts

if [[ $WIDGET == *kill-* ]]; then
  zle -f kill
  if (( REGION_ACTIVE )); then
    zle .kill-region
    return
  fi
fi

local catch=

if [[ $WIDGET == *-shell-* ]]; then

  # We can't split $RBUFFER on words, because that often won't parse correctly.
  local -a  words=( ${(z)BUFFER} )
  local -a lwords=( ${(z)LBUFFER} )

  local -i lcurrent=$#lwords
  local -i rcurrent=$#lwords

  local prefix=$lwords[lcurrent]
  local suffix=${words[rcurrent]#$prefix}

  if [[ -z $suffix ]]; then
    # The cursor is inbetween two words, not in the middle of a word.
    (( rcurrent++ ))
    suffix=$words[rcurrent]
  fi

  local blanks='[[:blank:]]#'
  local terminator=$'[;\n]' # Parsed word ; can also be \n

  if [[ $WIDGET == *backward-* ]]; then
    if [[ lcurrent -ne rcurrent && $prefix == \; ]]; then
      prefix=
    else
      terminator=
    fi
    catch=${(M)LBUFFER%%${prefix}${~terminator}${~blanks}}

  else  # forward
    if [[ lcurrent -ne rcurrent && $suffix == \; ]]; then
      suffix=
    else
      terminator=
    fi
    catch=${(M)RBUFFER##${~blanks}${~terminator}${suffix}}
  fi

else  # subword
  local wordchars=
  zstyle -s ":edit:$WIDGET:" word-chars wordchars &&
      local +h WORDCHARS=$wordchars

  local subword='([[:WORD:]]#~*[[:lower:]]*[[:upper:]]*)'
  local blanks='[[:blank:]]##'
  local other='[^[:WORD:][:blank:]]##'

  if [[ $WIDGET == *backward-* ]]; then
    catch=${(M)LBUFFER%%(${~other}${~blanks}|${~subword}(${~blanks}|${~other}|))}

  else  # forward
    catch=${(M)RBUFFER##(${~blanks}${~other}|(${~blanks}|${~other}|)${~subword})}
  fi
fi

local -i move= mult=

if [[ $WIDGET == *backward-* ]]; then
  (( mult = -1 ))
else
  (( mult = +1 ))
fi
(( move = mult * $#catch ))

if [[ $WIDGET == *kill-* ]]; then
  # Move the mark instead of the cursor, or else kill-region will add the kill to the wrong end of the cutbuffer.
  (( MARK = CURSOR + move ))
  zle .kill-region
else
  (( CURSOR += move ))
fi

return 0
